import { z } from 'zod';
declare const envSchema: z.ZodObject<{
    NODE_ENV: z.ZodDefault<z.ZodEnum<["development", "production", "test"]>>;
    PORT: z.ZodEffects<z.ZodDefault<z.ZodString>, number, string | undefined>;
    HOST: z.ZodDefault<z.ZodString>;
    POSTGRES_KA_URL: z.ZodOptional<z.ZodString>;
    POSTGRES_KA_HOST: z.ZodDefault<z.ZodString>;
    POSTGRES_KA_PORT: z.ZodEffects<z.ZodDefault<z.ZodString>, number, string | undefined>;
    POSTGRES_KA_DATABASE: z.ZodDefault<z.ZodString>;
    POSTGRES_KA_USER: z.ZodDefault<z.ZodString>;
    POSTGRES_KA_PASSWORD: z.ZodString;
    POSTGRES_OL_URL: z.ZodOptional<z.ZodString>;
    POSTGRES_OL_HOST: z.ZodDefault<z.ZodString>;
    POSTGRES_OL_PORT: z.ZodEffects<z.ZodDefault<z.ZodString>, number, string | undefined>;
    POSTGRES_OL_DATABASE: z.ZodDefault<z.ZodString>;
    POSTGRES_OL_USER: z.ZodDefault<z.ZodString>;
    POSTGRES_OL_PASSWORD: z.ZodString;
    MEM0_API_URL: z.ZodDefault<z.ZodString>;
    N8N_API_URL: z.ZodDefault<z.ZodString>;
    N8N_API_KEY: z.ZodOptional<z.ZodString>;
    CLOUDFLARE_API_TOKEN: z.ZodString;
    CLOUDFLARE_ACCOUNT_ID: z.ZodString;
    CLOUDFLARE_ZONE_ID: z.ZodOptional<z.ZodString>;
    GITHUB_APP_ID: z.ZodString;
    GITHUB_PRIVATE_KEY: z.ZodString;
    GITHUB_INSTALLATION_ID: z.ZodString;
    JWT_SECRET: z.ZodString;
    JWT_EXPIRES_IN: z.ZodDefault<z.ZodString>;
    RATE_LIMIT_WINDOW_MS: z.ZodEffects<z.ZodDefault<z.ZodString>, number, string | undefined>;
    RATE_LIMIT_MAX_REQUESTS: z.ZodEffects<z.ZodDefault<z.ZodString>, number, string | undefined>;
    REDIS_URL: z.ZodOptional<z.ZodString>;
    REDIS_HOST: z.ZodDefault<z.ZodString>;
    REDIS_PORT: z.ZodEffects<z.ZodDefault<z.ZodString>, number, string | undefined>;
    REDIS_PASSWORD: z.ZodOptional<z.ZodString>;
    ENABLE_METRICS: z.ZodEffects<z.ZodDefault<z.ZodString>, boolean, string | undefined>;
    METRICS_PORT: z.ZodEffects<z.ZodDefault<z.ZodString>, number, string | undefined>;
    LOG_LEVEL: z.ZodDefault<z.ZodEnum<["error", "warn", "info", "debug"]>>;
    LOG_FORMAT: z.ZodDefault<z.ZodEnum<["json", "pretty"]>>;
    DB_POOL_MIN: z.ZodEffects<z.ZodDefault<z.ZodString>, number, string | undefined>;
    DB_POOL_MAX: z.ZodEffects<z.ZodDefault<z.ZodString>, number, string | undefined>;
    DB_IDLE_TIMEOUT_MS: z.ZodEffects<z.ZodDefault<z.ZodString>, number, string | undefined>;
    DEFAULT_TIMEOUT_MS: z.ZodEffects<z.ZodDefault<z.ZodString>, number, string | undefined>;
    DB_QUERY_TIMEOUT_MS: z.ZodEffects<z.ZodDefault<z.ZodString>, number, string | undefined>;
    HTTP_TIMEOUT_MS: z.ZodEffects<z.ZodDefault<z.ZodString>, number, string | undefined>;
}, "strip", z.ZodTypeAny, {
    NODE_ENV: "development" | "production" | "test";
    PORT: number;
    HOST: string;
    POSTGRES_KA_HOST: string;
    POSTGRES_KA_PORT: number;
    POSTGRES_KA_DATABASE: string;
    POSTGRES_KA_USER: string;
    POSTGRES_KA_PASSWORD: string;
    POSTGRES_OL_HOST: string;
    POSTGRES_OL_PORT: number;
    POSTGRES_OL_DATABASE: string;
    POSTGRES_OL_USER: string;
    POSTGRES_OL_PASSWORD: string;
    MEM0_API_URL: string;
    N8N_API_URL: string;
    CLOUDFLARE_API_TOKEN: string;
    CLOUDFLARE_ACCOUNT_ID: string;
    GITHUB_APP_ID: string;
    GITHUB_PRIVATE_KEY: string;
    GITHUB_INSTALLATION_ID: string;
    JWT_SECRET: string;
    JWT_EXPIRES_IN: string;
    RATE_LIMIT_WINDOW_MS: number;
    RATE_LIMIT_MAX_REQUESTS: number;
    REDIS_HOST: string;
    REDIS_PORT: number;
    ENABLE_METRICS: boolean;
    METRICS_PORT: number;
    LOG_LEVEL: "error" | "warn" | "info" | "debug";
    LOG_FORMAT: "json" | "pretty";
    DB_POOL_MIN: number;
    DB_POOL_MAX: number;
    DB_IDLE_TIMEOUT_MS: number;
    DEFAULT_TIMEOUT_MS: number;
    DB_QUERY_TIMEOUT_MS: number;
    HTTP_TIMEOUT_MS: number;
    POSTGRES_KA_URL?: string | undefined;
    POSTGRES_OL_URL?: string | undefined;
    N8N_API_KEY?: string | undefined;
    CLOUDFLARE_ZONE_ID?: string | undefined;
    REDIS_URL?: string | undefined;
    REDIS_PASSWORD?: string | undefined;
}, {
    POSTGRES_KA_PASSWORD: string;
    POSTGRES_OL_PASSWORD: string;
    CLOUDFLARE_API_TOKEN: string;
    CLOUDFLARE_ACCOUNT_ID: string;
    GITHUB_APP_ID: string;
    GITHUB_PRIVATE_KEY: string;
    GITHUB_INSTALLATION_ID: string;
    JWT_SECRET: string;
    NODE_ENV?: "development" | "production" | "test" | undefined;
    PORT?: string | undefined;
    HOST?: string | undefined;
    POSTGRES_KA_URL?: string | undefined;
    POSTGRES_KA_HOST?: string | undefined;
    POSTGRES_KA_PORT?: string | undefined;
    POSTGRES_KA_DATABASE?: string | undefined;
    POSTGRES_KA_USER?: string | undefined;
    POSTGRES_OL_URL?: string | undefined;
    POSTGRES_OL_HOST?: string | undefined;
    POSTGRES_OL_PORT?: string | undefined;
    POSTGRES_OL_DATABASE?: string | undefined;
    POSTGRES_OL_USER?: string | undefined;
    MEM0_API_URL?: string | undefined;
    N8N_API_URL?: string | undefined;
    N8N_API_KEY?: string | undefined;
    CLOUDFLARE_ZONE_ID?: string | undefined;
    JWT_EXPIRES_IN?: string | undefined;
    RATE_LIMIT_WINDOW_MS?: string | undefined;
    RATE_LIMIT_MAX_REQUESTS?: string | undefined;
    REDIS_URL?: string | undefined;
    REDIS_HOST?: string | undefined;
    REDIS_PORT?: string | undefined;
    REDIS_PASSWORD?: string | undefined;
    ENABLE_METRICS?: string | undefined;
    METRICS_PORT?: string | undefined;
    LOG_LEVEL?: "error" | "warn" | "info" | "debug" | undefined;
    LOG_FORMAT?: "json" | "pretty" | undefined;
    DB_POOL_MIN?: string | undefined;
    DB_POOL_MAX?: string | undefined;
    DB_IDLE_TIMEOUT_MS?: string | undefined;
    DEFAULT_TIMEOUT_MS?: string | undefined;
    DB_QUERY_TIMEOUT_MS?: string | undefined;
    HTTP_TIMEOUT_MS?: string | undefined;
}>;
export declare const config: {
    NODE_ENV: "development" | "production" | "test";
    PORT: number;
    HOST: string;
    POSTGRES_KA_HOST: string;
    POSTGRES_KA_PORT: number;
    POSTGRES_KA_DATABASE: string;
    POSTGRES_KA_USER: string;
    POSTGRES_KA_PASSWORD: string;
    POSTGRES_OL_HOST: string;
    POSTGRES_OL_PORT: number;
    POSTGRES_OL_DATABASE: string;
    POSTGRES_OL_USER: string;
    POSTGRES_OL_PASSWORD: string;
    MEM0_API_URL: string;
    N8N_API_URL: string;
    CLOUDFLARE_API_TOKEN: string;
    CLOUDFLARE_ACCOUNT_ID: string;
    GITHUB_APP_ID: string;
    GITHUB_PRIVATE_KEY: string;
    GITHUB_INSTALLATION_ID: string;
    JWT_SECRET: string;
    JWT_EXPIRES_IN: string;
    RATE_LIMIT_WINDOW_MS: number;
    RATE_LIMIT_MAX_REQUESTS: number;
    REDIS_HOST: string;
    REDIS_PORT: number;
    ENABLE_METRICS: boolean;
    METRICS_PORT: number;
    LOG_LEVEL: "error" | "warn" | "info" | "debug";
    LOG_FORMAT: "json" | "pretty";
    DB_POOL_MIN: number;
    DB_POOL_MAX: number;
    DB_IDLE_TIMEOUT_MS: number;
    DEFAULT_TIMEOUT_MS: number;
    DB_QUERY_TIMEOUT_MS: number;
    HTTP_TIMEOUT_MS: number;
    POSTGRES_KA_URL?: string | undefined;
    POSTGRES_OL_URL?: string | undefined;
    N8N_API_KEY?: string | undefined;
    CLOUDFLARE_ZONE_ID?: string | undefined;
    REDIS_URL?: string | undefined;
    REDIS_PASSWORD?: string | undefined;
};
export declare const dbConfig: {
    kidsAscension: {
        connectionString: string | undefined;
        host: string;
        port: number;
        database: string;
        user: string;
        password: string;
        min: number;
        max: number;
        idleTimeoutMillis: number;
        connectionTimeoutMillis: number;
        statement_timeout: number;
    };
    ozeanLicht: {
        connectionString: string | undefined;
        host: string;
        port: number;
        database: string;
        user: string;
        password: string;
        min: number;
        max: number;
        idleTimeoutMillis: number;
        connectionTimeoutMillis: number;
        statement_timeout: number;
    };
};
export declare const serviceUrls: {
    mem0: string;
    n8n: string;
};
export declare const features: {
    metrics: boolean;
    rateLimiting: boolean;
    authentication: boolean;
    cors: boolean;
    compression: boolean;
    helmet: boolean;
};
export type Config = z.infer<typeof envSchema>;
export {};
//# sourceMappingURL=environment.d.ts.map